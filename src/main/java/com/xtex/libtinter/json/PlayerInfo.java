package com.xtex.libtinter.json;

import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import org.jetbrains.annotations.NotNull;

import java.lang.reflect.Type;
import java.util.List;

/**
 * An user info, only basic info, client send to server to "tell server who am I"
 * For server to client(e.g. synchronize player list), see PlayerInfo
 *
 * @see UserInfo
 * @see PlayerInfo#create(String, boolean, String, String, int)
 */
@SuppressWarnings("NotNullFieldNotInitialized")
public class PlayerInfo {

    /**
     * The type for <code>List\<PlayerInfo\></code>
     * Used for GSON deserializing
     */
    public static final Type LIST_TYPE_TOKEN = new TypeToken<List<PlayerInfo>>() {
    }.getType();

    /**
     * The unique ID of the player, generated by server, not user name
     */
    @SerializedName("id")
    public @NotNull String id;

    /**
     * Is this player the owner of this room?
     */
    @SerializedName("owner")
    public boolean owner;

    /**
     * The user name of this player
     *
     * @see UserInfo#username
     */
    @SerializedName("username")
    public @NotNull String username;

    /**
     * The URL of the avatar image of this player
     */
    @SerializedName("avatarUrl")
    public @NotNull String avatarUrl;

    /**
     * The current score of this player
     */
    @SerializedName("score")
    public int score;

    public static PlayerInfo create(String id, boolean owner, String username, String avatarUrl, int score) {
        PlayerInfo info = new PlayerInfo();
        info.id = id;
        info.owner = owner;
        info.username = username;
        info.avatarUrl = avatarUrl;
        info.score = score;
        return info;
    }

}
